
==================== FINAL INTERFACE ====================
2019-02-27 09:56:00.701467877 UTC

interface wacc32-0.1.0.0-3oOtzXerc607YIePR0qNZ2:FrontEnd.Parser 8002
  interface hash: 6a0c2647210dff19671ec0881aa5516d
  ABI hash: dc168563fd1859eeec254be3c17e78ba
  export-list hash: 45bb2ab1df05f1264fee753899b5f469
  orphan hash: 2a2d7206f799ffa67b9f79be9ee10fcb
  flag hash: e9beed7d88d6049c0208cbb2aba6ca80
  sig of: Nothing
  used TH splices: False
  where
exports:
  FrontEnd.Parser.binary
  FrontEnd.Parser.genFuncAppF
  FrontEnd.Parser.parseArrayElem
  FrontEnd.Parser.parseArrayLiter
  FrontEnd.Parser.parseArrayType
  FrontEnd.Parser.parseAssignLHSF
  FrontEnd.Parser.parseAssignRHSF
  FrontEnd.Parser.parseAssignStat
  FrontEnd.Parser.parseBaseType
  FrontEnd.Parser.parseBoolLiter
  FrontEnd.Parser.parseBracketExpr
  FrontEnd.Parser.parseCallF
  FrontEnd.Parser.parseCharLiter
  FrontEnd.Parser.parseDeclareStat
  FrontEnd.Parser.parseExitStat
  FrontEnd.Parser.parseExprF
  FrontEnd.Parser.parseFile
  FrontEnd.Parser.parseFuncAppStat
  FrontEnd.Parser.parseFuncF
  FrontEnd.Parser.parseIdentF
  FrontEnd.Parser.parseIfStat
  FrontEnd.Parser.parseIntLiter
  FrontEnd.Parser.parseNewPair
  FrontEnd.Parser.parsePairElem
  FrontEnd.Parser.parsePairLiter
  FrontEnd.Parser.parsePairType
  FrontEnd.Parser.parseParamF
  FrontEnd.Parser.parseProgramF
  FrontEnd.Parser.parseReturnStat
  FrontEnd.Parser.parseStatF
  FrontEnd.Parser.parseStatListF
  FrontEnd.Parser.parseStringLiter
  FrontEnd.Parser.parseSubroutineStat
  FrontEnd.Parser.parseType
  FrontEnd.Parser.parseWhileStat
  FrontEnd.Parser.table
  FrontEnd.Parser.term
  FrontEnd.Parser.toFuncExpr
  FrontEnd.Parser.unary
module dependencies: FrontEnd.AST FrontEnd.Lexer
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.2@mtl-2.2.2-IUStvhCM9Fb6Pb0KlPCV7h
                      parsec-3.1.13.0@parsec-3.1.13.0-5jBHpMDfG914ocK3TvC2E
                      text-1.2.3.1@text-1.2.3.1-FiKShuz66xXAoRKdCDhKNQ
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.3.1@text-1.2.3.1-FiKShuz66xXAoRKdCDhKNQ:Data.Text
         text-1.2.3.1@text-1.2.3.1-FiKShuz66xXAoRKdCDhKNQ:Data.Text.Lazy
         text-1.2.3.1@text-1.2.3.1-FiKShuz66xXAoRKdCDhKNQ:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.3.1@text-1.2.3.1-FiKShuz66xXAoRKdCDhKNQ:Data.Text
                         text-1.2.3.1@text-1.2.3.1-FiKShuz66xXAoRKdCDhKNQ:Data.Text.Lazy
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO.Exception 5064be4c355632a1d1c4f2322f56ac52
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Exit 068ba078eb20417d7af66db8b8ab4db1
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  mtl-2.2.2@mtl-2.2.2-IUStvhCM9Fb6Pb0KlPCV7h:Control.Monad.Except 869f4b14ae34c6b0a79ae70cc607cb8e
import  -/  parsec-3.1.13.0@parsec-3.1.13.0-5jBHpMDfG914ocK3TvC2E:Text.Parsec.Char b1ddd217bfad0bc4142580ebcdc43275
import  -/  parsec-3.1.13.0@parsec-3.1.13.0-5jBHpMDfG914ocK3TvC2E:Text.Parsec.Combinator 499debb324bcefb47fb7f31094bfbe35
import  -/  parsec-3.1.13.0@parsec-3.1.13.0-5jBHpMDfG914ocK3TvC2E:Text.Parsec.Error c2eedac7ff659aea940cd85ae2b8fc40
import  -/  parsec-3.1.13.0@parsec-3.1.13.0-5jBHpMDfG914ocK3TvC2E:Text.Parsec.Expr 0c0c63a630be5d0ff97bf9de5e381816
import  -/  parsec-3.1.13.0@parsec-3.1.13.0-5jBHpMDfG914ocK3TvC2E:Text.Parsec.Pos 9d4a34659ff1b882b10c732ea28cbeb8
import  -/  parsec-3.1.13.0@parsec-3.1.13.0-5jBHpMDfG914ocK3TvC2E:Text.Parsec.Prim 6cb5564512860d5b4760a068aca472b4
import  -/  parsec-3.1.13.0@parsec-3.1.13.0-5jBHpMDfG914ocK3TvC2E:Text.Parsec.String 2a8a881d6a54225880369f6e0a88c3a7
import  -/  parsec-3.1.13.0@parsec-3.1.13.0-5jBHpMDfG914ocK3TvC2E:Text.ParserCombinators.Parsec b1fa1f14f685b3aa53aea3b32e435e1f
import  -/  parsec-3.1.13.0@parsec-3.1.13.0-5jBHpMDfG914ocK3TvC2E:Text.ParserCombinators.Parsec.Expr 3568fbb81862cd2ccfa01189df9d1556
import  -/  parsec-3.1.13.0@parsec-3.1.13.0-5jBHpMDfG914ocK3TvC2E:Text.ParserCombinators.Parsec.Language 0b1b3576595e8072e5b444f2c63e9231
import  -/  parsec-3.1.13.0@parsec-3.1.13.0-5jBHpMDfG914ocK3TvC2E:Text.ParserCombinators.Parsec.Pos 1692f343e5c5cc79ae7aef4277ba02d1
import  -/  parsec-3.1.13.0@parsec-3.1.13.0-5jBHpMDfG914ocK3TvC2E:Text.ParserCombinators.Parsec.Prim 19ee2021b51ddb141200860a1e1128af
import  -/  FrontEnd.AST 13c4a14be76ce51c011789d09991ee7e
  exports: c71a8578c05d8981bdbdc0f839e79cdc
  Ann 7fb12f302cfbf6b6a9644b9022f39f91
  ArrayElem 20a9002fa5c7a880222792b8088784fd
  ArrayLiter 2c7fb705577fbe26b0c92ab9b038cf7c
  Assign c9253eba2dbcb82e200705249ffda60e
  BoolLiter f242a322ad0fedd5ecb1579d8a5e9b9e
  BracketExpr 6f2d9ec9e7eddea39de0b23fa4b1ccf6
  CharLiter 0458b4eacfafbb08f2fec10d88830282
  Declare 003063376653c1ef78a2034dd3236d7b
  Exit 6d9a13cd0053bdea62c2cd3748feae80
  Expr 048863448071204b4f096bf54a7d962c
  ExprF 048863448071204b4f096bf54a7d962c
  Func c7dcba27b2484d7b42e2091a6e288149
  FuncApp 7c4037b27a9527827a9401cf55e9d295
  FuncAppF 048863448071204b4f096bf54a7d962c
  FuncExpr 6188e6636c92ca9df653f0f89fd5dc47
  FuncF 9340e16bce1d1e46b7de1676a36637ff
  FuncStat bbaea13021f384be4edd0ea8066c9715
  Ident d38c2816185f64eaa87a87bb4f1f284b
  IdentExpr e73e6f79f7f1ef1091078aeeed9f0804
  IdentF ec2f730c7d9fd0d60995deb2a8237a07
  If 41c6a88b2ac35b6df66a31872b4fd7f0
  IntLiter 34d3efe89b2a1206d5f4c1e06ebf5c34
  None 6ed46c0b98a3264aa2588cd2b21943cd
  Null d07e86e72331bc577ef82b35eece2bd8
  Param e121bfb0c269eb452a3f460fc6e7748c
  ParamF 79e2ac42726a3ab8f12e2556b622b353
  Program 410fd95ff8f98d31de0e476f267b415c
  ProgramF 7ad5b774cd31af8f985fa4c4cbcfa7e6
  Return dd154fd7dab4366b36f9e2bc9ebe9d95
  Stat 7a7ac6f3981aec536719f99cb3fcc916
  StatF 7a7ac6f3981aec536719f99cb3fcc916
  StatList d3a3a04ef089fd4a8715f53fb53f355e
  StatListF 7a7ac6f3981aec536719f99cb3fcc916
  StringLiter 6f1c0a78bc4d294148974465edb0afc2
  Subroutine c290bc93d96618101048c8a5ef575c59
  TAny 20b6fed4f64c6ee6acb6902bd10f465f
  TArray 675264970e89d6be6a7b3e6f609b61a8
  TBool ebaf87cd8048064e60b38511bca54962
  TChar ec215f0c3082a946dbbc8dae32db4dc2
  TFunc 3f21d70d5fc155d018a3c6908184945c
  TInt 217cf96b2dda4e7a20fd48a7acdc5d45
  TPair f6c60416a1982c621b5593998f9b57e5
  TStr 1e8a03d0c8a4120669e95455e7ec9733
  Type 31b3244b67ff67ccd6b5abdfe81be110
  Void af6d1b14ed1a22ed78ee078c986c4b5b
  While bd4a4fee4ef59ee20f73dea3819ad3e2
  builtInFunc fc085426e0f1eb149b76b5af8405bd3c
import  -/  FrontEnd.Lexer 7b1c7d802f398c2b9929783c53008a1d
  exports: 680dfbe6c36dcef175bfbed83930aef8
  brackets b48bdae42047fe93e18069921e6e7587
  charLiteral a32ad4149ad7aace8f3caccaff579c83
  comma 4ba949b151234a48c9d1d01887518f10
  commaSep 0a74e42eeeb3145a8a560644559f65b4
  ident edbda1212b8f9590381ae6f090857d26
  integer 192864c5d0c096d234760c0b1945acce
  parens f60888b3b8a4b23cda4cc3f9fb436e82
  reserved 4e32052ff08873268614e22f4e5d3a4c
  reservedOp 834f10753550003e504cc73fd0275a4b
  semi 7e4f386027917e3bb100d9b043514ad8
  stringLiteral f00f7b9783a19f16fa3eba2e231c0153
  symbol 1ae6fa454465795c6ec1ed8f8bc70a2a
  whiteSpace 2dbd990449275ed89abfa371a2f6eb47
55c10c25352adf014096261506bee46b
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  (FrontEnd.Parser.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream
                     @ tok)
                  (FrontEnd.Parser.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons
                     @ tok) -}
b38656e0b694d0aa487759a10e09db98
  $s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream ::
    GHC.Base.Monad Data.Functor.Identity.Identity
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ tok -> Data.Functor.Identity.$fMonadIdentity) -}
0d7941befe2ab1fe61c4f7c757ab9ab9
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Nothing @ (tok, [tok]))
                   : t ts
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Just @ (tok, [tok]) (t, ts)) }) -}
26a2b80e149b073b5243a9bc67397172
  $s^1 :: GHC.Types.Int
  {- Strictness: x -}
5f16d6236a308ba9916bc14b4a57dcc5
  $s^2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
8a122e145cd2c21ed92f9eaf71181c7b
  $seven1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
40c6548ab7319f254bc7e6390fb9797c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   FrontEnd.Parser.$trModule2
                   FrontEnd.Parser.$trModule1) -}
0e48e83febcd3553617beb7063de3e34
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FrontEnd.Parser"#) -}
2daa2466b54f60839551169d44376021
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "wacc32-0.1.0.0-3oOtzXerc607YIePR0qNZ2"#) -}
cc65168bb1dd717adfdd57710d2f65ec
  $w$s^ :: GHC.Types.Int -> GHC.Integer.Type.Integer -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.ltInteger#
                        w1
                        FrontEnd.Parser.$s^2 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False
                   -> case GHC.Integer.Type.eqInteger#
                             w1
                             FrontEnd.Parser.$s^2 of wild2 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                        GHC.Types.False
                        -> case w of ww { GHC.Types.I# ww1 -> FrontEnd.Parser.$wf ww1 w1 }
                        GHC.Types.True -> 1# } }
                   GHC.Types.True
                   -> case FrontEnd.Parser.$s^1 ret_ty GHC.Prim.Int# of {} } }) -}
c2eb2146cd5de64b9b1b73736d25da40
  $wbinary ::
    GHC.Base.String
    -> (Text.Parsec.Pos.SourcePos
        -> [FrontEnd.AST.Ann (FrontEnd.AST.Expr a)]
        -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp a))
    -> Text.Parsec.Expr.Assoc
    -> (# Text.Parsec.String.GenParser
            GHC.Types.Char
            st
            (FrontEnd.AST.Ann (FrontEnd.AST.Expr a)
             -> FrontEnd.AST.Ann (FrontEnd.AST.Expr a)
             -> FrontEnd.AST.Ann (FrontEnd.AST.Expr a)),
          Text.Parsec.Expr.Assoc #)
  {- Arity: 3, Strictness: <L,U><L,C(C1(U(U,U)))><L,U>,
     Inline: [0] -}
53bffad097587bc41548d9304a13cb28
  $wf :: GHC.Prim.Int# -> GHC.Integer.Type.Integer -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <L,U><S,U>, Inline: [0] -}
ba51a7170c9278a7484054644bc8e6c1
  $wlvl ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 4,
     Strictness: <L,U><L,C(C1(C1(U)))><L,C(C1(C1(U)))><L,U>,
     Inline: [0],
     Unfolding: (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: FrontEnd.AST.ExprF ()
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: FrontEnd.AST.ExprF ()
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 FrontEnd.Parser.parseArrayElem4
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <FrontEnd.AST.ExprF ()>_R)
                   @ b
                   w
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    w1
                      x
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   w3
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    w2
                      x
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   w3) -}
67374bbf8823720eb070e155070605f4
  $wparseAssignLHSF ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
a074f25df8333a897c4d8adcdef76932
  $wparseType ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
449b958950b55362fa23a8b13fb23125
  $wterm ::
    Text.Parsec.Pos.SourcePos
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
9a43db1650946b48245e3f3e7a12f974
  $wunary ::
    (t
     -> Text.Parsec.Prim.ParsecT
          GHC.Base.String st Data.Functor.Identity.Identity a1)
    -> t
    -> (Text.Parsec.Pos.SourcePos
        -> [FrontEnd.AST.Ann (FrontEnd.AST.Expr a)]
        -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp a))
    -> (# Text.Parsec.String.GenParser
            GHC.Types.Char
            st
            (FrontEnd.AST.Ann (FrontEnd.AST.Expr a)
             -> FrontEnd.AST.Ann (FrontEnd.AST.Expr a)) #)
  {- Arity: 3, Strictness: <L,1*C1(U)><L,U><L,C(C1(U(U,U)))>,
     Inline: [0] -}
067e13f8133e7327efbad373ce47ac52
  binary ::
    GHC.Base.String
    -> (Text.Parsec.Pos.SourcePos
        -> [FrontEnd.AST.Ann (FrontEnd.AST.Expr a)]
        -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp a))
    -> Text.Parsec.Expr.Assoc
    -> Text.ParserCombinators.Parsec.Expr.Operator
         GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr a))
  {- Arity: 3, Strictness: <L,U><L,C(C1(U(U,U)))><L,U>m1,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ st
                   @ a
                   (w :: GHC.Base.String)
                   (w1 :: Text.Parsec.Pos.SourcePos
                          -> [FrontEnd.AST.Ann (FrontEnd.AST.Expr a)]
                          -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp a))
                   (w2 :: Text.Parsec.Expr.Assoc) ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ a
                        w
                        w1
                        w2 of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr a))
                   ww1
                   ww2 }) -}
b5d8ff114361e055ba9fd80866fe9e60
  genFuncAppF ::
    GHC.Base.String
    -> Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.FuncAppF ()
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><L,U>m,
     Unfolding: InlineRule (3, True, False)
                (\ (fName :: GHC.Base.String)
                   (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()]) ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         (FrontEnd.AST.Ident @ () fName)
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
aac51d97340991d84f96620663549aa6
  parseArrayElem :: Text.Parsec.String.Parser (FrontEnd.AST.Expr ())
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseArrayElem1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Expr ()>_R)) -}
902e7193e78e283a3f22dcdf63fbb72e
  parseArrayElem1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 FrontEnd.Parser.parseArrayElem7
                   @ b1
                   s1
                   (\ (x :: FrontEnd.AST.IdentF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    FrontEnd.Parser.parseArrayElem2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Expr ())
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: FrontEnd.AST.IdentF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    FrontEnd.Parser.parseArrayElem2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Expr ())
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
f7f10cfd9b1cb29a769975ed485a5ba2
  parseArrayElem2 ::
    FrontEnd.AST.IdentF ()
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (FrontEnd.AST.Expr ()
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (FrontEnd.AST.Expr ()
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (i :: FrontEnd.AST.IdentF ())
                   @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: FrontEnd.AST.Expr ()
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: FrontEnd.AST.Expr ()
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wmany1
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (FrontEnd.AST.ExprF ())
                   FrontEnd.Parser.parseArrayElem3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.ExprF ()>_R))
                   @ b
                   eta
                   (\ (x :: [FrontEnd.AST.ExprF ()])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    eta1
                      (FrontEnd.AST.ArrayElem @ () i x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta2
                   (\ (x :: [FrontEnd.AST.ExprF ()])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    eta3
                      (FrontEnd.AST.ArrayElem @ () i x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta4) -}
faf4f67e5ab6a3126095d840207d0067
  parseArrayElem3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: FrontEnd.AST.ExprF ()
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: FrontEnd.AST.ExprF ()
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 FrontEnd.Parser.$wlvl @ b w w1 w3 w4) -}
5b69e7ca5600330ec74e9fe8a2e5dffc
  parseArrayElem4 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (FrontEnd.AST.ExprF ())
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds19
                   @ (FrontEnd.AST.ExprF ())
                   FrontEnd.Parser.parseArrayElem5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.ExprF ()>_R)) }) -}
4725223f7f18d7d88477fe67b6e8fc23
  parseArrayElem5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.ExprF ())
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseArrayElem6
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.ExprF ()>_R))) -}
5d42cb2289ef6a5492e140241210cbc2
  parseArrayElem6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
d7bb872af0ea8ea4aebb1ce54aac3a59
  parseArrayElem7 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.IdentF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.IdentF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
5f502ab367b7857f243c7cc5ebf900c8
  parseArrayLiter :: Text.Parsec.String.Parser (FrontEnd.AST.Expr ())
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseArrayLiter1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Expr ()>_R)) -}
43a50a4bc05baaa0710a8e7ec5b441e9
  parseArrayLiter1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 FrontEnd.Parser.parseArrayLiter2
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <[FrontEnd.AST.ExprF ()]>_R)
                   @ b1
                   s1
                   (\ (x :: [FrontEnd.AST.ExprF ()])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    cok
                      (FrontEnd.AST.ArrayLiter @ () x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   cerr
                   (\ (x :: [FrontEnd.AST.ExprF ()])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    eok
                      (FrontEnd.AST.ArrayLiter @ () x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eerr) -}
5177ea5719f4caa0831195754820e20f
  parseArrayLiter2 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      [FrontEnd.AST.ExprF ()]
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds19
                   @ [FrontEnd.AST.ExprF ()]
                   FrontEnd.Parser.parseArrayLiter3 }) -}
49fa47fda74e3d8a49cbcc1cafdfbfe3
  parseArrayLiter3 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      [FrontEnd.AST.ExprF ()]
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds27
                   @ (FrontEnd.AST.ExprF ())
                   FrontEnd.Parser.parseArrayElem5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.ExprF ()>_R)) }) -}
50e70f002889d9fd2d1942195aeb8054
  parseArrayType :: Text.Parsec.String.Parser FrontEnd.AST.Type
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseArrayType1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Type>_R)) -}
c8753e1cc2d7c1d9a52307c6bfa2f041
  parseArrayType1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
17630d5e35a1c14b432157df5edc9aba
  parseAssignLHSF ::
    Text.Parsec.String.Parser (FrontEnd.AST.ExprF ())
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseAssignLHSF1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.ExprF ()>_R)) -}
bec96eab48bcaaa9be8a546db7be7b44
  parseAssignLHSF1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.ExprF ())
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseAssignLHSF2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.ExprF ()>_R))) -}
57aea9d7cec58acca5c4a6b4e9ce5207
  parseAssignLHSF2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.ExprF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: FrontEnd.AST.ExprF ()
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: FrontEnd.AST.ExprF ()
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 FrontEnd.Parser.$wparseAssignLHSF @ b1 w w1 w3 w4) -}
703880fe9f469c3af9d2bb34766fc4c8
  parseAssignRHSF ::
    Text.Parsec.String.Parser (FrontEnd.AST.ExprF ())
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseAssignRHSF1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Ann (FrontEnd.AST.Expr ())>_R)) -}
2957d2ad3f2e82822736a23edfe548fc
  parseAssignRHSF1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
99d03ba45c8d16b79915d312bd4d5dcd
  parseAssignStat :: Text.Parsec.String.Parser (FrontEnd.AST.Stat ())
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseAssignStat1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Stat ()>_R)) -}
0129c74366d7cfe36e9bbcdc806a0a12
  parseAssignStat1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.ExprF ())
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseAssignLHSF2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.ExprF ()>_R))
                   @ b1
                   s1
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    FrontEnd.Parser.parseAssignStat2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Stat ())
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    FrontEnd.Parser.parseAssignStat2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Stat ())
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
da00364356b62aac253f1558249b0bf3
  parseAssignStat2 ::
    FrontEnd.AST.ExprF ()
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (FrontEnd.AST.Stat ()
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (FrontEnd.AST.Stat ()
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (lhs :: FrontEnd.AST.ExprF ())
                   @ b1
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: FrontEnd.AST.Stat ()
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: FrontEnd.AST.Stat ()
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.Stat ())
                   FrontEnd.Parser.parseAssignStat3
                   (\ @ b2
                      (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (cok :: FrontEnd.AST.Stat ()
                              -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                              -> Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b2)[OneShot]
                      (cerr :: Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b2)[OneShot]
                      (eok :: FrontEnd.AST.Stat ()
                              -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                              -> Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b2)[OneShot]
                      (eerr :: Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b2)[OneShot] ->
                    FrontEnd.Parser.parseAssignRHSF1
                      @ b2
                      s1
                      (\ (x :: FrontEnd.AST.ExprF ())
                         (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                         (err :: Text.Parsec.Error.ParseError) ->
                       cok
                         (FrontEnd.AST.Assign @ () lhs x)
                         s2
                         (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                          case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                          case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                          case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                          case Text.Parsec.Error.$wmergeError
                                 ww4
                                 ww5
                                 ww6
                                 ww2
                                 ww11
                                 ww12
                                 ww13
                                 (GHC.Types.[]
                                    @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                          Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                      cerr
                      (\ (x :: FrontEnd.AST.ExprF ())
                         (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok
                         (FrontEnd.AST.Assign @ () lhs x)
                         s2
                         (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                          case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                          case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                          case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                          case Text.Parsec.Error.$wmergeError
                                 ww4
                                 ww5
                                 ww6
                                 ww2
                                 ww11
                                 ww12
                                 ww13
                                 (GHC.Types.[]
                                    @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                          Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                      eerr)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.Stat ()>_R))
                   @ b1
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
199af3f728218e7c1a973d0bed00b116
  parseAssignStat3 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 FrontEnd.Parser.parseAssignStat4 }) -}
556080341a04f024a01e7ffe36837406
  parseAssignStat4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "="#) -}
69a41343602e84c32680de52f4e246e6
  parseBaseType :: Text.Parsec.String.Parser FrontEnd.AST.Type
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseBaseType1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Type>_R)) -}
a10ef8671b007e0e59b81323df4f2886
  parseBaseType1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
1c151c664c59f8c7d4da7d6369dc5440
  parseBoolLiter :: Text.Parsec.String.Parser (FrontEnd.AST.Expr ())
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseBoolLiter1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Expr ()>_R)) -}
ffe1f48df352890c65b528fef8f22e3b
  parseBoolLiter1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (cok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.Expr ())
                   FrontEnd.Parser.parseBoolLiter6
                   FrontEnd.Parser.parseBoolLiter5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.Expr ()>_R))
                   @ b
                   s1
                   cok
                   cerr
                   eok
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    Text.Parsec.Prim.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ ()
                      @ Data.Functor.Identity.Identity
                      @ ()
                      @ (FrontEnd.AST.Expr ())
                      FrontEnd.Parser.parseBoolLiter3
                      FrontEnd.Parser.parseBoolLiter2
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <FrontEnd.AST.Expr ()>_R))
                      @ b
                      s1
                      cok
                      cerr
                      (\ (y :: FrontEnd.AST.Expr ())
                         (s' :: Text.Parsec.Prim.State GHC.Base.String ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok y s' (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))) -}
825b1a944996bd0ce5377d38fca5ff69
  parseBoolLiter2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (ds :: FrontEnd.AST.Expr ()
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   FrontEnd.Parser.parseBoolLiter_x
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
7b50640d29d99ebcd317c828200504d0
  parseBoolLiter3 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 FrontEnd.Parser.parseBoolLiter4 }) -}
6b89cd7f45ee854bf55165c6fba49abe
  parseBoolLiter4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "false"#) -}
d5584fd46afcb224a8f0aadb76891812
  parseBoolLiter5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (ds :: FrontEnd.AST.Expr ()
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   FrontEnd.Parser.parseBoolLiter_x1
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
d8c37cd00b821d05fe9747f6fb49f1a6
  parseBoolLiter6 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 FrontEnd.Parser.parseBoolLiter7 }) -}
f58e96f7f93c6f0dc66c53f467272de1
  parseBoolLiter7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "true"#) -}
a4475ed462c94d80c6bd5ded5973a4a6
  parseBoolLiter_x :: FrontEnd.AST.Expr ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (FrontEnd.AST.BoolLiter @ () GHC.Types.False) -}
37f8a0cb0dc51db6cec806ffeb14ea88
  parseBoolLiter_x1 :: FrontEnd.AST.Expr ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (FrontEnd.AST.BoolLiter @ () GHC.Types.True) -}
77dd8f55c82fc8c0d1ad99a587c9afc2
  parseBracketExpr ::
    Text.Parsec.String.Parser (FrontEnd.AST.Expr ())
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseBracketExpr1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Expr ()>_R)) -}
d87b6bf77569f522e878f48207a4f999
  parseBracketExpr1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 FrontEnd.Parser.parseBracketExpr2
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <FrontEnd.AST.ExprF ()>_R)
                   @ b1
                   s1
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    cok
                      (FrontEnd.AST.BracketExpr @ () x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   cerr
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    eok
                      (FrontEnd.AST.BracketExpr @ () x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eerr) -}
258ab8665201e81b5768976875503763
  parseBracketExpr2 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (FrontEnd.AST.ExprF ())
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds16
                   @ (FrontEnd.AST.ExprF ())
                   FrontEnd.Parser.parseArrayElem5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.ExprF ()>_R)) }) -}
58819e846d25337694dc3a86c0a55807
  parseCallF :: Text.Parsec.String.Parser (FrontEnd.AST.FuncAppF ())
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseCallF1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.FuncAppF ()>_R)) -}
2ebb9a8ae175a46cbfe620278381857b
  parseCallF1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.FuncAppF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.FuncAppF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
6d1a83a93eaacd884cb3063d34bc8ec2
  parseCharLiter :: Text.Parsec.String.Parser (FrontEnd.AST.Expr ())
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseCharLiter1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Expr ()>_R)) -}
3b235638bee62a6d0d0a8ea90a0b43fb
  parseCharLiter1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
2e68a58b53cd41f2fbb8cf0b1066514e
  parseDeclareStat ::
    Text.Parsec.String.Parser (FrontEnd.AST.Stat ())
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseDeclareStat1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Stat ()>_R)) -}
2e23668ac7b3585c21779e952888d7bc
  parseDeclareStat1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 FrontEnd.Parser.$wparseType
                   @ b1
                   s1
                   (\ (x :: FrontEnd.AST.Type)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    FrontEnd.Parser.parseDeclareStat2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Stat ())
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   (\ (x :: FrontEnd.AST.Type)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    FrontEnd.Parser.parseDeclareStat2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Stat ())
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
568381c1d2fe7d993820d4ac246dd302
  parseDeclareStat2 ::
    FrontEnd.AST.Type
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (FrontEnd.AST.Stat ()
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (FrontEnd.AST.Stat ()
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
09b75ebbb2ab5d7fb60b74f12c07f995
  parseExitStat :: Text.Parsec.String.Parser (FrontEnd.AST.Stat ())
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseExitStat1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Stat ()>_R)) -}
ae9567a3058e7ddbc0261ca9795816cf
  parseExitStat1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.Stat ())
                   FrontEnd.Parser.parseExitStat3
                   FrontEnd.Parser.parseExitStat2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.Stat ()>_R))) -}
925f3ec1abb9fead832bcee0883eda39
  parseExitStat2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.ExprF ())
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseArrayElem6
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.ExprF ()>_R))
                   @ b1
                   s1
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    cok
                      (FrontEnd.AST.Exit @ () x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   cerr
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    eok
                      (FrontEnd.AST.Exit @ () x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eerr) -}
812f07b2dc6914dcec69e4220a7f7f24
  parseExitStat3 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 FrontEnd.Parser.parseExitStat4 }) -}
3ccda936346794a84bcc54b5d49496d5
  parseExitStat4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "exit"#) -}
f7c96da00fe555300a85548e222df6f2
  parseExprF :: Text.Parsec.String.Parser (FrontEnd.AST.ExprF ())
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseArrayElem5
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.ExprF ()>_R)) -}
929aa559965a9236f270d400e22bd9ed
  parseFile ::
    GHC.Base.String -> GHC.Types.IO (FrontEnd.AST.ProgramF ())
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseFile1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <FrontEnd.AST.ProgramF ()>_R)) -}
e1c6b5eb6220c4814e4e168607078789
  parseFile1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          FrontEnd.AST.ProgramF () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (file :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        file
                        GHC.IO.IOMode.ReadMode
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ (FrontEnd.AST.ProgramF ())
                         (FrontEnd.Parser.$s$fStream[]mtok @ GHC.Types.Char)
                         FrontEnd.Parser.parseFile5
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <[GHC.Types.Char]>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <FrontEnd.AST.ProgramF ()>_R))
                         GHC.Tuple.()
                         (GHC.Types.[] @ GHC.Types.Char)
                         ipv3)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError
                              (FrontEnd.AST.ProgramF ())>_R) of wild {
                   Data.Either.Left e
                   -> case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             FrontEnd.Parser.parseFile4
                             GHC.Types.True
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      System.Exit.exitWith1
                        @ (FrontEnd.AST.ProgramF ())
                        FrontEnd.Parser.parseFile2
                        ipv4 }
                   Data.Either.Right r -> (# ipv2, r #) } } }) -}
52d61aaafbae2cdfe50c1b81a7a4f24d
  parseFile2 :: GHC.IO.Exception.ExitCode
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.IO.Exception.ExitFailure
                   FrontEnd.Parser.parseFile3) -}
1c0f715415b015c1a035f8f5ba448eab
  parseFile3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 100#) -}
97568483aba77bfaa76cb78074bf92b9
  parseFile4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "#syntax_error#"#) -}
469cccd9728f5df297bb4ea1648ec20a
  parseFile5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.ProgramF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.ProgramF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.ProgramF ())
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseFile6
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.ProgramF ()>_R))) -}
628e2ff36b8272f673d032bc70e9e458
  parseFile6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.ProgramF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.ProgramF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
a2eba7b9ae845a11d1ec6a7635432c05
  parseFuncAppStat ::
    Text.Parsec.String.Parser (FrontEnd.AST.Stat ())
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseFuncAppStat1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Stat ()>_R)) -}
0d27a4a7330ad297cf4640f2c03e14dc
  parseFuncAppStat1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
3e62ff91f69da99f7f83c5a138416d12
  parseFuncF :: Text.Parsec.String.Parser (FrontEnd.AST.FuncF ())
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseFuncF1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.FuncF ()>_R)) -}
0d48e83761c0e919d3ca3b40db01aa17
  parseFuncF1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.FuncF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.FuncF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.FuncF ())
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseFuncF2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.FuncF ()>_R))) -}
aaf7f2ea2136f234cbe4765f35801961
  parseFuncF2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.FuncF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.FuncF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
9fe82b1e8adf11f88142202a9bfdc961
  parseIdentF :: Text.Parsec.String.Parser (FrontEnd.AST.IdentF ())
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseArrayElem7
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.IdentF ()>_R)) -}
0b93a64c240d5b880b06a1601ccff5e7
  parseIfStat :: Text.Parsec.String.Parser (FrontEnd.AST.Stat ())
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseIfStat1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Stat ()>_R)) -}
d5d943d8887d510a09a3cb3760cba503
  parseIfStat1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.Stat ())
                   FrontEnd.Parser.parseIfStat4
                   FrontEnd.Parser.parseIfStat2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.Stat ()>_R))) -}
1f6cb68c2ca8180c3005829f8d4f484d
  parseIfStat2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.ExprF ())
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseArrayElem6
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.ExprF ()>_R))
                   @ b1
                   s1
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    FrontEnd.Parser.parseIfStat3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Stat ())
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    FrontEnd.Parser.parseIfStat3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Stat ())
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
b8fa440976b14b73286499d26d4e036f
  parseIfStat3 ::
    FrontEnd.AST.ExprF ()
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (FrontEnd.AST.Stat ()
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (FrontEnd.AST.Stat ()
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
afd804d3b89c95cb431ebda56b32d60a
  parseIfStat4 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 FrontEnd.Parser.parseIfStat5 }) -}
f426f6f8d22820ae6924be9ae879dd59
  parseIfStat5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "if"#) -}
ab089dea90eaa7f7168b941f68f1e8eb
  parseIntLiter :: Text.Parsec.String.Parser (FrontEnd.AST.Expr ())
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseIntLiter1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Expr ()>_R)) -}
68f33a7f1b3a272ef6e6c88a95e23490
  parseIntLiter1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds8
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Integer.Type.Integer>_R)
                   @ b1
                   s1
                   (\ (x :: GHC.Integer.Type.Integer)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    cok
                      (FrontEnd.AST.IntLiter
                         @ ()
                         (case GHC.Integer.Type.integerToInt x of wild1 { DEFAULT ->
                          GHC.Types.I# wild1 }))
                      s2
                      (case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case s2 of wild1 { Text.Parsec.Prim.State ds37 ds38 ds39 ->
                       case ds38 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   cerr
                   (\ (x :: GHC.Integer.Type.Integer)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    eok
                      (FrontEnd.AST.IntLiter
                         @ ()
                         (case GHC.Integer.Type.integerToInt x of wild1 { DEFAULT ->
                          GHC.Types.I# wild1 }))
                      s2
                      (case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case s2 of wild1 { Text.Parsec.Prim.State ds37 ds38 ds39 ->
                       case ds38 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eerr }) -}
cd0033152d8fd6f7a03640d0bf56b2f9
  parseNewPair :: Text.Parsec.String.Parser (FrontEnd.AST.Expr ())
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseNewPair1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Expr ()>_R)) -}
eb001774d3698ecd5078033437372cb4
  parseNewPair1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
e75c2f2aa87c9880a81847baa33cd8d1
  parsePairElem :: Text.Parsec.String.Parser (FrontEnd.AST.Expr ())
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parsePairElem1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Expr ()>_R)) -}
b686b77a08e2995f2a206de745fbf87f
  parsePairElem1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
a92ea32a6b0e287f3249a6a8f035e73d
  parsePairLiter :: Text.Parsec.String.Parser (FrontEnd.AST.Expr ())
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parsePairLiter1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Expr ()>_R)) -}
351a402fbaaf8a18d06ecd708d4b9185
  parsePairLiter1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.Expr ())
                   FrontEnd.Parser.parsePairLiter3
                   FrontEnd.Parser.parsePairLiter2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.Expr ()>_R))) -}
9b622e9f87934952378764f314e11435
  parsePairLiter2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (ds :: FrontEnd.AST.Expr ()
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   (FrontEnd.AST.Null @ ())
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
2ba164d03f9da54da237baced859016b
  parsePairLiter3 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 FrontEnd.Parser.parsePairLiter4 }) -}
cfdaccd44b6008e4023c328dea30ba66
  parsePairLiter4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "null"#) -}
a123ee3fc89d6665154bc745b96bf851
  parsePairType :: Text.Parsec.String.Parser FrontEnd.AST.Type
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parsePairType1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Type>_R)) -}
ff611915e42fe322a7b19afb3e8cd325
  parsePairType1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ FrontEnd.AST.Type
                   FrontEnd.Parser.parsePairType7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   FrontEnd.Parser.parsePairType2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.Type>_R))) -}
b028102364cad0a40448274992c159e4
  parsePairType2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Type
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Type
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 FrontEnd.Parser.parsePairType3
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <FrontEnd.AST.Type>_R)
                   @ b1
                   s1
                   (\ (x :: FrontEnd.AST.Type)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    cok
                      x
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   cerr
                   (\ (x :: FrontEnd.AST.Type)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    eok
                      x
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eerr) -}
0be3e150c572e0e237d7a9ebaac0b7b7
  parsePairType3 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity FrontEnd.AST.Type
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds16
                   @ FrontEnd.AST.Type
                   FrontEnd.Parser.parsePairType4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.Type>_R)) }) -}
01a6328978c521c77f2cb44583f5a13a
  parsePairType4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Type
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Type
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 FrontEnd.Parser.parsePairType6
                   @ b1
                   s1
                   (\ (x :: FrontEnd.AST.Type)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    FrontEnd.Parser.parsePairType5
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Type)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: FrontEnd.AST.Type)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    FrontEnd.Parser.parsePairType5
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Type)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
180126edb56871c94d805087beab2581
  parsePairType5 ::
    FrontEnd.AST.Type
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (FrontEnd.AST.Type
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (FrontEnd.AST.Type
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (t1 :: FrontEnd.AST.Type)
                   @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: FrontEnd.AST.Type
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: FrontEnd.AST.Type
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ FrontEnd.AST.Type
                   (FrontEnd.Lexer.comma @ ())
                   FrontEnd.Parser.parsePairType6
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.Type>_R))
                   @ b
                   eta
                   (\ (x :: FrontEnd.AST.Type)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    eta1
                      (FrontEnd.AST.TPair t1 x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta2
                   (\ (x :: FrontEnd.AST.Type)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    eta3
                      (FrontEnd.AST.TPair t1 x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta4) -}
ec4bed524dd78794536ff3c6db087c1a
  parsePairType6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,C(U)><L,C(C1(C1(U)))><L,C(U)> -}
bc6de573884a124eac37f8b9af3ef013
  parsePairType7 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (FrontEnd.Parser.$s$fStream[]mtok @ GHC.Types.Char)
                   FrontEnd.Parser.parsePairType8) -}
ab1f6cab503f20c3447ba2eeabad73fc
  parsePairType8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pair"#) -}
e1c37defb39718e4528e30736fd3e4c2
  parseParamF :: Text.Parsec.String.Parser (FrontEnd.AST.ParamF ())
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseParamF1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.ParamF ()>_R)) -}
89de460fe0279238cb0d38544377c33a
  parseParamF1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.ParamF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.ParamF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.ParamF ())
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseParamF2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.ParamF ()>_R))) -}
00869e461caa25ff3a56950a8faf02cf
  parseParamF2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.ParamF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.ParamF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
9c6aded43c9b000970ba5a6a44dea4b2
  parseProgramF ::
    Text.Parsec.String.Parser (FrontEnd.AST.ProgramF ())
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseFile5
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.ProgramF ()>_R)) -}
abb1a4c62e5497ffc3ded5a6ea7a4b16
  parseReturnStat :: Text.Parsec.String.Parser (FrontEnd.AST.Stat ())
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseReturnStat1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Stat ()>_R)) -}
6a85790f69189cf94714733fb08790d7
  parseReturnStat1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.Stat ())
                   FrontEnd.Parser.parseReturnStat3
                   FrontEnd.Parser.parseReturnStat2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.Stat ()>_R))) -}
eda4cfe0d7fd4ca05054716bf5f406cd
  parseReturnStat2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.ExprF ())
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseArrayElem6
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.ExprF ()>_R))
                   @ b1
                   s1
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    cok
                      (FrontEnd.AST.Return @ () x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   cerr
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    eok
                      (FrontEnd.AST.Return @ () x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eerr) -}
84cbcced95c925ccce22fa3fd31d0aa6
  parseReturnStat3 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 FrontEnd.Parser.parseReturnStat4 }) -}
a9e4bf8f3e5a99e8dc8f63aef8ce8efe
  parseReturnStat4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "return"#) -}
3de3ba308221e7fc73718ac95b4bfdb5
  parseStatF :: Text.Parsec.String.Parser (FrontEnd.AST.StatF ())
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseStatF1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Ann (FrontEnd.AST.Stat ())>_R)) -}
db06b6827b55e0d7b14d98afb2df31d7
  parseStatF1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Ann (FrontEnd.AST.Stat ())
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Ann (FrontEnd.AST.Stat ())
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Ann (FrontEnd.AST.Stat ())
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Ann (FrontEnd.AST.Stat ())
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ Text.Parsec.Pos.SourcePos
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseStatF3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Text.Parsec.Pos.SourcePos>_R))
                   @ b1
                   s1
                   (\ (x :: Text.Parsec.Pos.SourcePos)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    FrontEnd.Parser.parseStatF2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Ann (FrontEnd.AST.Stat ()))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: Text.Parsec.Pos.SourcePos)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    FrontEnd.Parser.parseStatF2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Ann (FrontEnd.AST.Stat ()))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
bc4b35bddb1dd608bb2830f1993c801b
  parseStatF2 ::
    Text.Parsec.Pos.SourcePos
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (FrontEnd.AST.Ann (FrontEnd.AST.Stat ())
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (FrontEnd.AST.Ann (FrontEnd.AST.Stat ())
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
c9e3af819d2f5269e2e490f0b4fcba51
  parseStatF3 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (Text.Parsec.Pos.SourcePos
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Pos.SourcePos
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w2 :: Text.Parsec.Pos.SourcePos
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Pos.SourcePos
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$wgetPosition
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ ()
                   @ b
                   w1
                   w4) -}
ed87344646605226d9fe429e1ded992f
  parseStatListF ::
    Text.Parsec.String.Parser (FrontEnd.AST.StatListF ())
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseStatListF1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.StatListF ()>_R)) -}
f173606fce965ac2fc311d859d70da75
  parseStatListF1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.StatListF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.StatListF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.StatListF ())
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseStatListF2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.StatListF ()>_R))) -}
c61681b95f044aaeb40e675888331f6b
  parseStatListF2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.StatListF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.StatListF ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
5c0dee3da46b25e944f7dc98a4033481
  parseStringLiter ::
    Text.Parsec.String.Parser (FrontEnd.AST.Expr ())
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseStringLiter1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Expr ()>_R)) -}
45dfcf7070ac41676619936ae3e1b528
  parseStringLiter1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Expr ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Expr ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds6
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b1
                   s1
                   (\ (x :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    cok
                      (FrontEnd.AST.StringLiter @ () x)
                      s2
                      (case s2 of wild1 { Text.Parsec.Prim.State ds37 ds38 ds39 ->
                       case ds38 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   cerr
                   (\ (x :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    eok
                      (FrontEnd.AST.StringLiter @ () x)
                      s2
                      (case s2 of wild1 { Text.Parsec.Prim.State ds37 ds38 ds39 ->
                       case ds38 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eerr }) -}
d9772c6eedf56cdbcf26cbf881cfb2ba
  parseSubroutineStat ::
    Text.Parsec.String.Parser (FrontEnd.AST.Stat ())
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseSubroutineStat1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Stat ()>_R)) -}
c737e914c5665d8ec223d8f7118879d4
  parseSubroutineStat1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.Stat ())
                   FrontEnd.Parser.parseSubroutineStat6
                   FrontEnd.Parser.parseSubroutineStat2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.Stat ()>_R))) -}
e4ff24b306bf364f2b62a55a624c2f8e
  parseSubroutineStat2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.StatListF ())
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseStatListF2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.StatListF ()>_R))
                   @ b1
                   s1
                   (\ (x :: FrontEnd.AST.StatListF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    FrontEnd.Parser.parseSubroutineStat3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Stat ())
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: FrontEnd.AST.StatListF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    FrontEnd.Parser.parseSubroutineStat3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Stat ())
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
fe383bab71780827730a733da49b4a38
  parseSubroutineStat3 ::
    FrontEnd.AST.StatListF ()
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (FrontEnd.AST.Stat ()
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (FrontEnd.AST.Stat ()
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (stat :: FrontEnd.AST.StatListF ())
                   @ b1
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: FrontEnd.AST.Stat ()
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: FrontEnd.AST.Stat ()
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.Stat ())
                   FrontEnd.Parser.parseSubroutineStat4
                   (let {
                      x :: FrontEnd.AST.Stat () = FrontEnd.AST.Subroutine @ () stat
                    } in
                    (\ @ b
                       (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                       (ds :: FrontEnd.AST.Stat ()
                              -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                              -> Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b)[OneShot]
                       (ds1 :: Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b)[OneShot]
                       (eok :: FrontEnd.AST.Stat ()
                               -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                               -> Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b)[OneShot]
                       (ds2 :: Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b)[OneShot] ->
                     eok
                       x
                       s1
                       (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                        Text.Parsec.Error.ParseError
                          ds4
                          (GHC.Types.[] @ Text.Parsec.Error.Message) }))
                      `cast`
                    (Sym (Text.Parsec.Prim.N:ParsecT[0]
                              <[GHC.Types.Char]>_R
                              <()>_R
                              <Data.Functor.Identity.Identity>_R
                              <FrontEnd.AST.Stat ()>_R)))
                   @ b1
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
28b8baf2f09d6613310ea52a79c72b1f
  parseSubroutineStat4 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 FrontEnd.Parser.parseSubroutineStat5 }) -}
cc0e0af436841468c620c668adfc0351
  parseSubroutineStat5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "end"#) -}
bd7ef20e05cc30b17f3aa24fc44acf12
  parseSubroutineStat6 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 FrontEnd.Parser.parseSubroutineStat7 }) -}
3f1bb62e8ae9cc55a4199a6979f14c15
  parseSubroutineStat7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "begin"#) -}
793278ef406c65a99cd571ed53ff15b9
  parseType :: Text.Parsec.String.Parser FrontEnd.AST.Type
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseType1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Type>_R)) -}
126e568204f90851a2f13d5c81a117fe
  parseType1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (FrontEnd.AST.Type
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: FrontEnd.AST.Type
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: FrontEnd.AST.Type
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 FrontEnd.Parser.$wparseType @ b w w1 w3 w4) -}
54c7176f43fd047b50a73beb16bb916d
  parseWhileStat :: Text.Parsec.String.Parser (FrontEnd.AST.Stat ())
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.parseWhileStat1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Stat ()>_R)) -}
373980ccfc39b5f64a66d39c2bcc7a52
  parseWhileStat1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.Stat ())
                   FrontEnd.Parser.parseWhileStat4
                   FrontEnd.Parser.parseWhileStat2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.Stat ()>_R))) -}
d06c2990e8d09df11d5639ae8f4a8087
  parseWhileStat2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Stat ()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Stat ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (FrontEnd.AST.ExprF ())
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseArrayElem6
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <FrontEnd.AST.ExprF ()>_R))
                   @ b1
                   s1
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    FrontEnd.Parser.parseWhileStat3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Stat ())
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: FrontEnd.AST.ExprF ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    FrontEnd.Parser.parseWhileStat3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: FrontEnd.AST.Stat ())
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
ab0c879d92a6229e5bc45e477fc49a1c
  parseWhileStat3 ::
    FrontEnd.AST.ExprF ()
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (FrontEnd.AST.Stat ()
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (FrontEnd.AST.Stat ()
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
c9dcb5e2043e8a7bc2b5308b0be43743
  parseWhileStat4 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case FrontEnd.Lexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 FrontEnd.Parser.parseWhileStat5 }) -}
338b2ae7e94eb10fe8da0d7639784362
  parseWhileStat5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "while"#) -}
ec50a1a080f4a199059f8b796435b53f
  table ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
                   (FrontEnd.Parser.table72 @ st)
                   (FrontEnd.Parser.table1 @ st)) -}
11aeb47cdfe3530c387c8ae268bb8338
  table1 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
                   (FrontEnd.Parser.table57 @ st)
                   (FrontEnd.Parser.table2 @ st)) -}
0b5989907903b9a2c7e71791a9ad2130
  table10 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table11) -}
6790689e74115c5a1fcb8ba4c628ce9b
  table11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "||"#) -}
f9f645944fa53b6316d316d4c9dcbfca
  table12 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table13 @ st)
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))))) -}
73dcef25b13067330dd485f647accb0c
  table13 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ ()
                        FrontEnd.Parser.table16
                        FrontEnd.Parser.table14
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1
                   ww2 }) -}
b9e0240dadb82cee2fbd099389f36adc
  table14 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table15
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
742bb360c40fb93b646419c3159146d3
  table15 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table16) -}
69f9493fa72eee7432287a3f2d06411b
  table16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "&&"#) -}
31e16ec0df45cfc81fd8128383129659
  table17 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table23 @ st)
                   (FrontEnd.Parser.table18 @ st)) -}
ead64ba2a44809ef553ab65c83e52cf3
  table18 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table19 @ st)
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))))) -}
e90ad8dc8fd4a219c0925c5dfc2f3a32
  table19 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ ()
                        FrontEnd.Parser.table22
                        FrontEnd.Parser.table20
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1
                   ww2 }) -}
37fd10d59eceb2910555525f3bc7d5a0
  table2 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
                   (FrontEnd.Parser.table47 @ st)
                   (FrontEnd.Parser.table3 @ st)) -}
9ff3ad28e3eceb15cd21d7d676c0cce9
  table20 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table21
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
b5e79e54e57d3afc356a292819bc218e
  table21 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table22) -}
837eae26bd044fcf04db4918198055cb
  table22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "!="#) -}
2ca9fefc59e81d4ba60b3c5e55d6ec29
  table23 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ ()
                        FrontEnd.Parser.table26
                        FrontEnd.Parser.table24
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1
                   ww2 }) -}
e7e8cf05c167a971fe373afa482b62c4
  table24 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table25
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
1cc07bd170c5dfbe8ee28da3d814c027
  table25 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table26) -}
e02dccb9c260c771ec0ddf249e86b554
  table26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "=="#) -}
e9b5909d9a3cbf38675be0697397e8aa
  table27 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table43 @ st)
                   (FrontEnd.Parser.table28 @ st)) -}
985d88132c9168d675e2e65f1d5ffe35
  table28 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table39 @ st)
                   (FrontEnd.Parser.table29 @ st)) -}
0dc75bcd3d86b9d44e175d2d39e3e103
  table29 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table35 @ st)
                   (FrontEnd.Parser.table30 @ st)) -}
01f5a3a900ea56ebfb2d9f4a0a2b9460
  table3 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
                   (FrontEnd.Parser.table27 @ st)
                   (FrontEnd.Parser.table4 @ st)) -}
a92e4195e0e10125f31c0ab6b98a3e54
  table30 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table31 @ st)
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))))) -}
e74378b6826072ae56a25f0138372726
  table31 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ ()
                        FrontEnd.Parser.table34
                        FrontEnd.Parser.table32
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1
                   ww2 }) -}
80a02c90dbf74ecc87971a8c1613c31f
  table32 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table33
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
a4822e53e5a997351bceb2954854ca41
  table33 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table34) -}
b4fb65319087f148a676e981e7971a53
  table34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<"#) -}
fe861f0177895b420bf227f2e4d3751a
  table35 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ ()
                        FrontEnd.Parser.table38
                        FrontEnd.Parser.table36
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1
                   ww2 }) -}
034af4606610670ae9c4fe8c0151c236
  table36 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table37
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
7797493c747613e0be01856b8870a679
  table37 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table38) -}
2bb08ded0ad97b28ed148a8347fd5f3a
  table38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<="#) -}
037d6ecb840088681a0bd2858bd24ab4
  table39 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ ()
                        FrontEnd.Parser.table42
                        FrontEnd.Parser.table40
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1
                   ww2 }) -}
4136c39099d1e7309b73758956c45a1c
  table4 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
                   (FrontEnd.Parser.table17 @ st)
                   (FrontEnd.Parser.table5 @ st)) -}
ed80760fabe3c927de442563df2b28d2
  table40 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table41
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
22f874e6f731a40abf0d7ee810882a26
  table41 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table42) -}
039cb144a579c37505bb065e976dda92
  table42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ">"#) -}
9ac101c7386b2c970ef7fb88655d6981
  table43 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ ()
                        FrontEnd.Parser.table46
                        FrontEnd.Parser.table44
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1
                   ww2 }) -}
b79871ec2616ab9b753cd5942ceba893
  table44 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table45
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
d4c8892dc643b07612ea542b135c7128
  table45 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table46) -}
c2ac3c3accb9b2ed85b9107da3538e78
  table46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ">="#) -}
be1ddff2f5e230901496665577be58c0
  table47 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table53 @ st)
                   (FrontEnd.Parser.table48 @ st)) -}
2699d95607d750272b75e7c95e1cdd51
  table48 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table49 @ st)
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))))) -}
36dd5afcbbeaa092d2524b5c323ed15a
  table49 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ ()
                        FrontEnd.Parser.table52
                        FrontEnd.Parser.table50
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1
                   ww2 }) -}
9f255edeea1fc81a312fa10f796782c4
  table5 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
                   (FrontEnd.Parser.table12 @ st)
                   (FrontEnd.Parser.table6 @ st)) -}
b6422aec50b7b172da137dfca7c71cbf
  table50 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table51
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
ed3a37790abe6afa061f5eb187d60c62
  table51 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table52) -}
88c98390b47a7c5a263306d67bb7176c
  table52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-"#) -}
e2554689191cab7ce3cb799fb9cb5867
  table53 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ ()
                        FrontEnd.Parser.table56
                        FrontEnd.Parser.table54
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1
                   ww2 }) -}
5faa9b0cf04f050fd108e804e256eb39
  table54 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table55
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
27081a1788804e403debde0b1699eec9
  table55 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table56) -}
e0b74561fdaa8acf0170d27a47cbb96c
  table56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "+"#) -}
1b0804543badd577d9af86616ca999df
  table57 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table68 @ st)
                   (FrontEnd.Parser.table58 @ st)) -}
e39c3570202d54c15a20a27139e071b6
  table58 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table64 @ st)
                   (FrontEnd.Parser.table59 @ st)) -}
33266d0374c09ab3229619faa4233d22
  table59 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table60 @ st)
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))))) -}
e48c98b4d3c924fa49a1f6efcc8986a0
  table6 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
                   (FrontEnd.Parser.table7 @ st)
                   (GHC.Types.[]
                      @ [Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))])) -}
fa74f905a6c89bc700582b5a63e16f27
  table60 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ ()
                        FrontEnd.Parser.table63
                        FrontEnd.Parser.table61
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1
                   ww2 }) -}
0461c3451c2b53490a78c73738427ca4
  table61 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table62
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
a5d7acde184fe7d44515d6b4cb23f7e7
  table62 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table63) -}
aaf4076153bd7719b045823b6e98d81c
  table63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "%"#) -}
fd69a1a2498a0ccc7840a9d01a565b45
  table64 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ ()
                        FrontEnd.Parser.table67
                        FrontEnd.Parser.table65
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1
                   ww2 }) -}
9ca04ff23907ae1ab88f5dd50644f3a3
  table65 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table66
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
dd627347a6641a0ebdc8c1ebaaa3f722
  table66 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table67) -}
76b6f1b5ffcc8b3e52d44f6ea61964ab
  table67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/"#) -}
d8499774271c346adf6de3b94440e3b8
  table68 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ ()
                        FrontEnd.Parser.table71
                        FrontEnd.Parser.table69
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1
                   ww2 }) -}
db15bade4cfc63ccdc28455389dc621d
  table69 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table70
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
0b0916fe656a967062aebb35c73cef8b
  table7 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table8 @ st)
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))))) -}
f39e9e000330e9f36b6e9d53cc9f60e6
  table70 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table71) -}
71f3fb4f2d0d41b2ccd6f2dc268488e6
  table71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "*"#) -}
e791ef6ed4f4e2a3a0545afc16c41fc4
  table72 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table97 @ st)
                   (FrontEnd.Parser.table73 @ st)) -}
81e9aab306ca3d4196f546c2078556ee
  table73 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table94 @ st)
                   (FrontEnd.Parser.table74 @ st)) -}
0e330d7608d8e9b68242f4cf84d0dd7e
  table74 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table90 @ st)
                   (FrontEnd.Parser.table75 @ st)) -}
f67801a4a867ad3a6b88132fd63606a7
  table75 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table86 @ st)
                   (FrontEnd.Parser.table76 @ st)) -}
bf08858a995a359b0aef725ebeba10b5
  table76 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table82 @ st)
                   (FrontEnd.Parser.table77 @ st)) -}
d3a92484f3fdb5ee3ca3d35fb527c9b7
  table77 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())))
                   (FrontEnd.Parser.table78 @ st)
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))))) -}
84cfdfe22f557240626deefb3dc530ae
  table78 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wunary
                        @ ()
                        @ ()
                        @ st
                        @ GHC.Base.String
                        (FrontEnd.Lexer.reserved @ st)
                        FrontEnd.Parser.table81
                        FrontEnd.Parser.table79 of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Prefix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1 }) -}
b3e52a3209c14aecd59aed6226970864
  table79 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table80
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
361632e2697a295109ddc1078ea39275
  table8 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wbinary
                        @ st
                        @ ()
                        FrontEnd.Parser.table11
                        FrontEnd.Parser.table9
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1
                   ww2 }) -}
4dc22ea57188bdf3ae07e1db32da36d2
  table80 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table81) -}
eb7be22a31ac91e8e1320188a933d9a5
  table81 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr"#) -}
7d7e385b0afee6114b281c111f73ee65
  table82 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wunary
                        @ ()
                        @ ()
                        @ st
                        @ GHC.Base.String
                        (FrontEnd.Lexer.reserved @ st)
                        FrontEnd.Parser.table85
                        FrontEnd.Parser.table83 of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Prefix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1 }) -}
e71b36dc0790be96cd25e0a1c9028549
  table83 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table84
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
2061d5806ea9480a09b1295e4399fbd7
  table84 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table85) -}
ab5a678fe575cff847b0484487add591
  table85 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ord"#) -}
4cbdaf1651347b5502d7b00bf022e5cb
  table86 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wunary
                        @ ()
                        @ ()
                        @ st
                        @ GHC.Base.String
                        (FrontEnd.Lexer.reserved @ st)
                        FrontEnd.Parser.table89
                        FrontEnd.Parser.table87 of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Prefix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1 }) -}
bda6d2c9f85adcbe3654710111b35367
  table87 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table88
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
e12fd0b50e37630cb2ee372fa4d31ba4
  table88 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table89) -}
55c715e4800520a7051409f61a049e4e
  table89 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "len"#) -}
89e9f887d3fa283f0b22094d9ad799ec
  table9 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table10
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
638306ae372a21912ece6d0f4c06cc2e
  table90 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wunary
                        @ ()
                        @ GHC.Base.String
                        @ st
                        @ GHC.Base.String
                        (FrontEnd.Lexer.symbol @ st)
                        FrontEnd.Parser.table93
                        FrontEnd.Parser.table91 of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Prefix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1 }) -}
22522292bfbb0da58ab5b59595f8a24b
  table91 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table92
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
2e8d98a7bd2e13a490290ba8047d49ae
  table92 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident @ () FrontEnd.Parser.table93) -}
b9f4da062aba3b0452ab0598d8d36d02
  table93 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "!"#) -}
eb790dec15eb7aaf840f91e64945e324
  table94 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wunary
                        @ ()
                        @ GHC.Base.String
                        @ st
                        @ GHC.Base.String
                        (FrontEnd.Lexer.symbol @ st)
                        FrontEnd.Parser.table52
                        FrontEnd.Parser.table95 of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Prefix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1 }) -}
b4f9ef0c4e44528913e97a37e2a7e4dd
  table95 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table96
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
0b87357fd3ac57ed6787215922837419
  table96 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident
                   @ ()
                   FrontEnd.Parser.table_fName) -}
5ddc9cb43731d994aae01b263cfe6e98
  table97 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
  {- Unfolding: (\ @ st ->
                 case FrontEnd.Parser.$wunary
                        @ ()
                        @ GHC.Base.String
                        @ st
                        @ GHC.Base.String
                        (FrontEnd.Lexer.symbol @ st)
                        FrontEnd.Parser.table56
                        FrontEnd.Parser.table98 of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Prefix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                   ww1 }) -}
314438afe25359d8e727123b250af6e3
  table98 ::
    Text.Parsec.Pos.SourcePos
    -> [FrontEnd.AST.ExprF ()]
    -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp ())
  {- Arity: 2,
     Unfolding: (\ (pos :: Text.Parsec.Pos.SourcePos)
                   (expr :: [FrontEnd.AST.ExprF ()])[OneShot] ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.FuncApp ())
                   (FrontEnd.AST.FuncApp
                      @ ()
                      FrontEnd.AST.None
                      (FrontEnd.AST.Ann
                         @ (FrontEnd.AST.Ident ())
                         FrontEnd.Parser.table99
                         (pos, FrontEnd.AST.None))
                      expr)
                   (pos, FrontEnd.AST.None)) -}
74ad93559b837892e771d752259862e0
  table99 :: FrontEnd.AST.Ident ()
  {- Unfolding: (FrontEnd.AST.Ident
                   @ ()
                   FrontEnd.Parser.table_fName1) -}
65df832dcd2a287faa34027de28b8e96
  table_fName :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "#neg"#) -}
03ec16b3e0c70e18a1a94ad9590119fe
  table_fName1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "#pos"#) -}
690b18af256ceaa64198ca311458e9aa
  term :: Text.Parsec.String.Parser (FrontEnd.AST.ExprF ())
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                FrontEnd.Parser.term1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <FrontEnd.AST.Ann (FrontEnd.AST.Expr ())>_R)) -}
e0f84d00aca18a72b5e044c8d64bcf02
  term1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (FrontEnd.AST.Ann (FrontEnd.AST.Expr ())
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: FrontEnd.AST.Ann (FrontEnd.AST.Expr ())
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: FrontEnd.AST.Ann (FrontEnd.AST.Expr ())
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ Text.Parsec.Pos.SourcePos
                   (FrontEnd.Lexer.whiteSpace @ ())
                   FrontEnd.Parser.parseStatF3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Text.Parsec.Pos.SourcePos>_R))
                   @ b1
                   s1
                   (\ (x :: Text.Parsec.Pos.SourcePos)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    FrontEnd.Parser.$wterm
                      x
                      @ b1
                      s2
                      cok
                      (\ (x1 :: FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: Text.Parsec.Pos.SourcePos)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    FrontEnd.Parser.$wterm
                      x
                      @ b1
                      s2
                      cok
                      (\ (x1 :: FrontEnd.AST.Ann (FrontEnd.AST.Expr ()))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
25a167b2684d71789eee0dbeb47fe7c2
  toFuncExpr ::
    FrontEnd.AST.Ann (FrontEnd.AST.FuncApp a)
    -> FrontEnd.AST.Ann (FrontEnd.AST.Expr a)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (funcApp :: FrontEnd.AST.Ann (FrontEnd.AST.FuncApp a)) ->
                 case funcApp of wild { FrontEnd.AST.Ann ds ann ->
                 FrontEnd.AST.Ann
                   @ (FrontEnd.AST.Expr a)
                   (FrontEnd.AST.FuncExpr @ a wild)
                   ann }) -}
8dc817a99ed61a2e51cf7fcf1e7d6a50
  unary ::
    (t
     -> Text.Parsec.Prim.ParsecT
          GHC.Base.String st Data.Functor.Identity.Identity a1)
    -> t
    -> (Text.Parsec.Pos.SourcePos
        -> [FrontEnd.AST.Ann (FrontEnd.AST.Expr a)]
        -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp a))
    -> Text.ParserCombinators.Parsec.Expr.Operator
         GHC.Types.Char st (FrontEnd.AST.Ann (FrontEnd.AST.Expr a))
  {- Arity: 3, Strictness: <L,1*C1(U)><L,U><L,C(C1(U(U,U)))>m2,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ a1
                   @ st
                   @ t
                   (w :: t
                         -> Text.Parsec.Prim.ParsecT
                              GHC.Base.String st Data.Functor.Identity.Identity a1)
                   (w1 :: t)
                   (w2 :: Text.Parsec.Pos.SourcePos
                          -> [FrontEnd.AST.Ann (FrontEnd.AST.Expr a)]
                          -> FrontEnd.AST.Ann (FrontEnd.AST.FuncApp a)) ->
                 case FrontEnd.Parser.$wunary
                        @ a
                        @ a1
                        @ st
                        @ t
                        w
                        w1
                        w2 of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Prefix
                   @ GHC.Types.Char
                   @ st
                   @ (FrontEnd.AST.Ann (FrontEnd.AST.Expr a))
                   ww1 }) -}
"SPEC/FrontEnd.Parser $fStream[]mtok @ Identity _" [ALWAYS] forall @ tok
                                                                   ($dMonad :: GHC.Base.Monad
                                                                                 Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  $dMonad
  = FrontEnd.Parser.$s$fStream[]mtok @ tok
"SPEC/FrontEnd.Parser $fStream[]mtok_$cp1Stream @ Identity _" [ALWAYS] forall @ tok
                                                                              ($dMonad :: GHC.Base.Monad
                                                                                            Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cp1Stream @ Data.Functor.Identity.Identity
                                             @ tok
                                             $dMonad
  = FrontEnd.Parser.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream
      @ tok
"SPEC/FrontEnd.Parser $fStream[]mtok_$cuncons @ Identity _" [ALWAYS] forall @ tok
                                                                            ($dMonad :: GHC.Base.Monad
                                                                                          Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = FrontEnd.Parser.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

