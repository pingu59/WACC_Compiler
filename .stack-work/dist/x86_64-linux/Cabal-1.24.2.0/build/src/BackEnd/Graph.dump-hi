
==================== FINAL INTERFACE ====================
2019-02-27 09:56:05.21738886 UTC

interface wacc32-0.1.0.0-3oOtzXerc607YIePR0qNZ2:BackEnd.Graph 8002
  interface hash: 35eb529d062b585b7fbf2e9064d2f659
  ABI hash: f13212459df478a4f22d57a7d585db9e
  export-list hash: 23382cc9eb8541be10497c2e7ddbf9c3
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 02b3c746106ad76f793f89ebc1f71840
  sig of: Nothing
  used TH splices: False
  where
exports:
  BackEnd.Graph.Graph{BackEnd.Graph.nodes}
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
ccf85084f055b424e2369e4fbf96a43e
  $tc'C:Graph :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16406502322866301752##
                   1213141619790812898##
                   BackEnd.Graph.$trModule
                   BackEnd.Graph.$tc'C:Graph1) -}
adadcd2066055f401e2c853c314349e9
  $tc'C:Graph1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:Graph"#) -}
f909177ac72f8d48b472dfdc8416ffe0
  $tcGraph :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16061810092239853326##
                   17325652460755346998##
                   BackEnd.Graph.$trModule
                   BackEnd.Graph.$tcGraph1) -}
5fa13bccf98f9b528578e9a7ebcdc729
  $tcGraph1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Graph"#) -}
1c2fb143540988db523128dbdf44f7fd
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   BackEnd.Graph.$trModule2
                   BackEnd.Graph.$trModule1) -}
001d37c8b53523c48e6ca1653f8de002
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "BackEnd.Graph"#) -}
5f794cd0258fb299e6d8c6d88071d89b
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "wacc32-0.1.0.0-3oOtzXerc607YIePR0qNZ2"#) -}
c65ea0511aad2043e5a10d1b9c5be265
  class Graph (graph :: * -> *) where
    nodes :: graph node -> [node]
    {-# MINIMAL nodes #-}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

